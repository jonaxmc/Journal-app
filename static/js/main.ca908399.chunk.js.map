{"version":3,"sources":["firebase/firebaseConfig.js","types/types.js","actions/ui.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/auth.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","redcucers/uiReducer.js","redcucers/notesReducer.js","store/store.js","redcucers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","setError","err","type","payload","finishLoading","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","console","log","startNewNote","dispatch","getState","newNote","title","date","Date","getTime","add","doc","activeNote","addNewNote","note","setNotes","startSaveNote","url","noteToFirestore","update","refreshNote","Swal","fire","startUploading","active","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","deleteNote","startLoginWithEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","message","logout","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","useSelector","state","useDispatch","className","style","display","onChange","files","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","src","alt","delete","startDeleting","NothingSelected","JournalEntry","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","key","Sidebar","signOut","JournalScreen","LoginScreen","loading","ui","onSubmit","preventDefault","autoComplete","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","register","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","cheking","setCheking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","basename","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ca908399.chunk.js","sourcesContent":["  \r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n\r\n    apiKey: \"AIzaSyAuTmAZywAs4c_bkwJIhckIYuiBG2PYx6k\",\r\n    authDomain: \"react-app-cursos-601e0.firebaseapp.com\",\r\n    projectId: \"react-app-cursos-601e0\",\r\n    storageBucket: \"react-app-cursos-601e0.appspot.com\",\r\n    messagingSenderId: \"113406430046\",\r\n    appId: \"1:113406430046:web:d452cf1f0ab797dd6f1dcf\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","\r\nexport const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updated note',\r\n    notesFilesUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n}","import { types } from \"../types/types\";\r\n\r\nexport const setError = (err)=>({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = ()=>({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoading = ()=>({\r\n    type: types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = ()=>({\r\n    type: types.uiFinishLoading\r\n})\r\n\r\n","import { db } from \"../firebase/firebaseConfig\"\r\n\r\n\r\nexport const loadNotes = async(uid)=>{\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n    const notes = [];\r\n    \r\n    notesSnap.forEach(snapHijo=>{\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        });\r\n    });\r\n\r\n\r\n\r\n    return notes;\r\n}","\r\nexport const fileUpload = async (file)=>{\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/ddyumspiu/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset','react-journal');\r\n    formData.append('file',file);\r\n\r\n    try {\r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if(resp.ok){\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }else{\r\n            throw await resp.json();\r\n        }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}","import { db } from \"../firebase/firebaseConfig\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2';\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\n\r\nexport const startNewNote = ()=>{\r\n    return async(dispatch, getState)=>{\r\n        const {uid} = getState().auth;\r\n        \r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n        \r\n        dispatch(activeNote(doc.id, newNote));\r\n        dispatch(addNewNote(doc.id, newNote));\r\n    }\r\n}\r\n\r\nexport const addNewNote =(id, note)=>({\r\n    type: types.notesAddNew,\r\n    payload:{\r\n        id, ...note\r\n    }\r\n\r\n})\r\n\r\nexport const activeNote = (id, note)=>({\r\n    type: types.notesActive,\r\n    payload:{\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const startLoadingNotes = (uid)=>{\r\n    return async(dispatch)=>{\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes));\r\n    }\r\n\r\n}\r\nexport const setNotes = (notes)=>({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n\r\n});\r\n\r\nexport const startSaveNote = (note) =>{\r\n    return async(dispatch, getState)=>{\r\n        const {uid} = getState().auth;\r\n        if(!note.url){\r\n            delete note.url;\r\n        }\r\n        const noteToFirestore = {...note};\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n\r\n        dispatch(refreshNote(note.id, noteToFirestore));\r\n\r\n        Swal.fire('Saved', note.title, 'success');\r\n\r\n    }\r\n}\r\n\r\nexport const refreshNote = (id, note)=>({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, \r\n        note:{\r\n            id,\r\n            ...note\r\n        }\r\n\r\n    }\r\n});\r\n\r\nexport const startUploading = (file)=>{\r\n    return async (dispatch, getState)=>{\r\n        const {active:activeNote} = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...', \r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: ()=>{\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n        dispatch(startSaveNote(activeNote))\r\n\r\n        Swal.close()\r\n    }\r\n}\r\n\r\n\r\nexport const startDeleting =(id)=>{\r\n    return async(dispatch, getState)=>{\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch(deleteNote(id));\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id)=>({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\n\r\nexport const noteLogout = ()=>({\r\n    type: types.notesLogoutCleaning\r\n});","import { firebase, googleAuthProvider } from '../firebase/firebaseConfig';\r\nimport { types } from \"../types/types\"\r\nimport { finishLoading, startLoading } from \"./ui\";\r\nimport Swal from 'sweetalert2'\r\nimport {noteLogout} from './notes'\r\n\r\n\r\n\r\n// const auth = getAuth();\r\n\r\nexport const startLoginWithEmailPassword = (email, password) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        dispatch(startLoading());\r\n        // signInWithEmailAndPassword(auth, email, password)\r\n        //     .then(({ user }) => {\r\n        //         dispatch(finishLoading());\r\n        //         dispatch(\r\n        //             login(user.uid, user.displayName)\r\n        //         )\r\n        //     })\r\n        //     .catch(e => {\r\n        //         console.log(e);\r\n        //         dispatch(finishLoading());\r\n        //         Swal.fire('Error', e.message, 'error');\r\n        //     })\r\n        firebase.auth().signInWithEmailAndPassword( email, password )\r\n            .then( ({ user }) => {\r\n                dispatch(login( user.uid, user.displayName ));\r\n\r\n                dispatch( finishLoading() );\r\n            })\r\n            .catch( e => {\r\n                console.log(e);\r\n                dispatch( finishLoading() );\r\n                Swal.fire('Error', e.message, 'error');\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const register = (name, email, password) => {\r\n    return (dispatch) => {\r\n\r\n\r\n        // createUserWithEmailAndPassword(auth, email, password)\r\n        //     .then(async ({ user }) => {\r\n\r\n        //         await updateProfile(user, { displayName: name })\r\n                \r\n\r\n        //         dispatch(\r\n        //             login(user.uid, user.displayName)\r\n        //         );\r\n\r\n        //     }).catch(e => {\r\n        //         console.log(e)\r\n        //         Swal.fire(\"Error\", e.message, 'error');\r\n        //     })\r\n        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n            .then( async({ user }) => {\r\n\r\n                await user.updateProfile({ displayName: name });\r\n\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                );\r\n            })\r\n            .catch( e => {\r\n                console.log(e);\r\n                Swal.fire('Error', e.message, 'error');\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const startLoginWithGoogle = () => {\r\n    return (dispatch) => {\r\n\r\n        // signInWithPopup(auth, googleAuthProvider)\r\n        //     .then(({ user }) => {\r\n        //         dispatch(\r\n        //             login(user.uid, user.displayName)\r\n        //         )\r\n        //     });\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n        .then( ({ user }) => {\r\n            dispatch(\r\n                login( user.uid, user.displayName )\r\n            )\r\n        });\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        // await auth.signOut();\r\n        await firebase.auth().signOut();\r\n        dispatch(logout());\r\n\r\n        dispatch(noteLogout())\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (initialState ={}) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState)=>{\r\n        setValues(newFormState)\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n    };\r\n\r\n    return [values, handleInputChange, reset];\r\n    \r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    const dispatch = useDispatch();\r\n    const handleSave = () => {\r\n        dispatch(startSaveNote(active))\r\n    }\r\n\r\n    const handlePicture = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if(file){\r\n            dispatch(startUploading(file))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 de agosto de 2020</span>\r\n            <input\r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{ display: 'none' }}\r\n                onChange={handleFileChange}\r\n            />\r\n            <div>\r\n                <button className=\"btn\" onClick={handlePicture}>Picture</button>\r\n                <button className=\"btn\" onClick={handleSave}>Save</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting, startSaveNote, startUploading } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active: note } = useSelector(state => state.notes);\r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n    const { body, title, id } = formValues;\r\n\r\n    const activeId = useRef(note.id);\r\n\r\n\r\n    const handleSave = () => {\r\n        dispatch(startSaveNote(note))\r\n    }\r\n\r\n    const handlePicture = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if(file){\r\n            dispatch(startUploading(file))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (note.id !== activeId.current) {\r\n            reset(note);\r\n            activeId.current = note.id\r\n        }\r\n\r\n    }, [note, reset])\r\n\r\n    useEffect(() => {\r\n        dispatch(activeNote(formValues.id, { ...formValues }))\r\n    }, [formValues, dispatch])\r\n\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDeleting(id))\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n            <div className=\"notes__content\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <textarea placeholder=\"What happened today?\"\r\n                    className=\"notes__text-area\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={handleInputChange}>\r\n\r\n                </textarea>\r\n                {\r\n                    (note.url) &&\r\n                    <div className=\"notes__image\">\r\n                        <img\r\n                            src={note.url}\r\n                            alt=\"arbol\"\r\n                        />\r\n\r\n                    </div>\r\n                }\r\n\r\n                <div className=\"adminActions\">\r\n                <input\r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{ display: 'none' }}\r\n                onChange={handleFileChange}\r\n            />\r\n                    {/* <input type=\"checkbox\" name=\"adminToggle\" class=\"adminToggle\" /> */}\r\n                    <div className=\"saveButton\" onClick={handleSave}><i className=\"fas fa-save\"></i></div>\r\n                    <div className=\"imageButton\" onClick={handlePicture}><i className=\"fas fa-image\"></i></div>\r\n                    <div className=\"deleteButton\" onClick={handleDelete}><i className=\"fas fa-trash\"></i></div>\r\n                   \r\n                </div>\r\n            </div>\r\n\r\n          \r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { startNewNote } from '../../actions/notes';\r\n\r\nexport const NothingSelected = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const handleAddNew = ()=>{\r\n        dispatch(startNewNote())\r\n    }\r\n\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            \r\n             <div>Select something</div>    \r\n              <div>or</div>  \r\n              <button className=\"btn btn-primary btn-m\" onClick={handleAddNew}>Create new note</button>\r\n            \r\n        \r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const noteDate = moment(date);\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch(activeNote(id, { date, title, body, url }))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"journal__entry pointer animate__animated animate__fadeIn animate__slower\" onClick={handleEntryClick}>\r\n            {\r\n                url &&\r\n                <div className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${url})`\r\n                    }}\r\n                ></div>\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n                <div className=\"journal__entry-content\">\r\n                    {body}\r\n                </div>\r\n\r\n                <div className=\"journal__entry-date-box\">\r\n                    {noteDate.format('MMMM')} {noteDate.format('D')}, {noteDate.format('YYYY')}\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { JournalEntry } from './JournalEntry'\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className=\"journal__entries scrollbar\">\r\n            {\r\n                notes.map(note => (\r\n                    <JournalEntry \r\n                    key={note.id}\r\n                    {...note}\r\n                    />\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const {name} = useSelector(state => state.auth);\r\n  \r\n   \r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n\r\n    }\r\n\r\n    const handleAddNew = ()=>{\r\n        dispatch(startNewNote())\r\n    }\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"jorunal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> {name}</span>\r\n                </h3>\r\n                <button className=\"btn\" onClick={handleLogout}>Logout</button>\r\n            </div>\r\n            <div className=\"journal__new-entry\" onClick={handleAddNew}>\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">New note</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector(state => state.notes)\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            <Sidebar />\r\n\r\n            <main>\r\n                {\r\n                    (active)\r\n                    ? <NoteScreen/>\r\n                    : <NothingSelected/>\r\n                }\r\n               \r\n                \r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { startLoginWithEmailPassword, startLoginWithGoogle } from '../../actions/auth'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading } = useSelector(state => state.ui);\r\n\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLoginWithEmailPassword(email, password));\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startLoginWithGoogle());\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth__contenedor animate__animated animate__fadeIn animate__faster\">\r\n            <div className=\"auth__title\">Welcome</div>\r\n            <form onSubmit={handleLogin}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={loading}\r\n                >Login</button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <div className=\"auth__or\">\r\n                        <div className=\"linea\">&nbsp;</div>\r\n                        <div className=\"leyenda\">Or</div>\r\n                        <div className=\"linea\">&nbsp;</div>\r\n                    </div>\r\n                    <div\r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            Sign in with google\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"auth__create-account\">\r\n                    Don't have an account?\r\n                    <Link to=\"/auth/register\" className=\"link\">&nbsp;Click here</Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm';\r\nimport validator from 'validator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { register } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector(state => state.ui);\r\n\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if (isFormValid()) {\r\n\r\n            dispatch(register(name, email, password));\r\n\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        if (name.trim().length === 0) {\r\n            dispatch(setError('Name is required'))\r\n            return false;\r\n        } else if (!validator.isEmail(email)) {\r\n            dispatch(setError('Email is incorrect'))\r\n            return false;\r\n        } else if (password !== password2 || password.length < 5) {\r\n            dispatch(setError('Password is incorrect'))\r\n            return false;\r\n\r\n        }\r\n\r\n        dispatch(removeError())\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__fadeIn animate__faster\">\r\n            <h3 className=\"auth__title\">Register</h3>\r\n            <form onSubmit={handleRegister}>\r\n\r\n                {\r\n                    msgError &&\r\n                    <div className=\"auth__alert-error\">{msgError}</div>\r\n                }\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >Register</button>\r\n\r\n\r\n                <Link to=\"/auth/login\" className=\"link\">\r\n                    Already registered?\r\n                </Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n            <Switch>\r\n                <Route exact path='/auth/login' component= {LoginScreen}/>\r\n                <Route exact path='/auth/register' component= {RegisterScreen}/>\r\n                <Redirect to='/auth/login'/>\r\n            </Switch>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n\r\n    return (\r\n        <Route {...rest}\r\n        component={(props)=>(\r\n            (isAuthenticated)\r\n            ? (<Component {...props}/>)\r\n            : (<Redirect to=\"/auth/login\"/>)\r\n        )\r\n        }\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n        component={(props)=>(\r\n            (!isAuthenticated)\r\n            ? (<Component {...props}/>)\r\n            : (<Redirect to=\"/\"/>)\r\n        )\r\n        }\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { login } from '../actions/auth';\r\nimport { JournalScreen } from '../components/journal/JournalScreen'\r\nimport { AuthRouter } from './AuthRouter'\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { firebase } from '../firebase/firebaseConfig'\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [cheking, setCheking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user)=>{\r\n            if(user?.uid){\r\n                dispatch(login(user.uid, user.displayName));\r\n                setIsLoggedIn(true);\r\n                dispatch(startLoadingNotes(user.uid));\r\n                \r\n            }else{\r\n                setIsLoggedIn(false)\r\n            }\r\n            setCheking(false)\r\n        })\r\n    }, [dispatch, setCheking, setIsLoggedIn])\r\n\r\n    if(cheking){\r\n        return(\r\n            <h1>Wait...</h1>\r\n        )\r\n    }\r\n    return (\r\n        <Router basename='https://jonaxmc.github.io/Journal-app/'>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute path='/auth' component= {AuthRouter} isAuthenticated={isLoggedIn}/>\r\n                    <PrivateRoute exact path='/' component= {JournalScreen} isAuthenticated={isLoggedIn}/>\r\n                    <Redirect to='/auth/login'/>\r\n                    \r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\nexport const notesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport { authReducer } from \"../redcucers/authReducer\";\r\nimport thunk from 'redux-thunk';\r\nimport { uiReducer } from \"../redcucers/uiReducer\";\r\nimport { notesReducer } from \"../redcucers/notesReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n}) \r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n     );\r\n\r\n    ","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        case types.logout:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}